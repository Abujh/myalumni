<!--
     This build script assumes that the source code of your web application
     is organized into the following subdirectories underneath the source
     code directory from which you execute the build script:

        docs                 Static documentation files to be copied to
                             the "docs" subdirectory of your distribution.

        src                  Java source code (and associated resource files)
                             to be compiled to the "WEB-INF/classes"
                             subdirectory of your web applicaiton.

        web               Static HTML, JSP, and other content (such as
                             image files), including the WEB-INF subdirectory
                             and its configuration file contents.
-->
<project name="myAlumni Build Integration" default="help" basedir="." xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
	<description>myAlumni Build Integration</description>
	
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              Property                      
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
	<property file="build.properties"/>
    <property name="base.dir" value="../../"/>
	<property name="src.path" value="${base.dir}/${src.dir}"/>
	<property name="build.path" value="${base.dir}/${build.dir}"/>
	<property name="classes.path" value="${build.path}/${web.dir}/WEB-INF/classes"/>
	<property name="dist.path" value="${build.path}/dist"/>	
	<property name="webroot.path" value="${base.dir}/${web.dir}"/>
	<property name="app.name" value="${app.name}"/>

	
	<path id="compile.classpath">
		
		<!-- Include all the other jar files that can not be downloaded from maven -->
		<fileset dir="${base.dir}/${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		
		<!-- Include ivy downloaded files -->
		<fileset dir="${user.home}/.ivy/cache">
			<include name="**/*.jar"/>
		</fileset>

	</path>
	
	<path id="run.classpath">
		<path refid="compile.classpath"/>
		<pathelement location="${classes.path}"/>		
	</path>
	
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: message                      
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->      
        <target name="help">
                <echo message="Kindly run one of the targets... 'ant target', where target is one of the following."/>
                <echo message="===================================================================================="/>
                <echo message="Current OS is ${os.name}"/>
	        	<echo message="all ............................ Run all"/>
                <echo message="clean .......................... Clean out the directoies  {WORKS}"/>
	            <echo message="compile ........................ Compiles the code {WORKS}"/>
    	    	<echo message="db.sync ........................ Drop, reload and populate database."/>
                <echo message="ear ............................ Build an EAR file.   {WORKS}"/>
                <echo message="init ........................... Initialize directories  {WORKS}"/>
                <echo message="ivy-clean ...................... Clean out the IVY lib jar files  {WORKS}"/>
                <echo message="ivy-compileonly ................ Used mainly by ivy on the build server"/>
                <echo message="ivy-init ....................... Init Ivy   {WORKS}"/>
                <echo message="ivy-prepare .................... Prepare Ivy   {WORKS}"/>
                <echo message="ivy-resolve .................... Resolve and grab new jar files."/>
                <echo message="tomcat-deploy .................. Deploy to Tomcat"/>
    	        <echo message="tomcat-start ................... Start Tomcat"/>
	            <echo message="tomcat-stop .................... Stop Tomcat"/>
                <echo message="war ............................ Build a WAR file. {WORKS}"/>
        </target>     
        
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: init                      
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="init">
            <tstamp/>
            <mkdir dir="${build.path}"/>
            <mkdir dir="${classes.path}"/>
            <mkdir dir="${dist.path}"/>            
        </target>      
        
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ivy-clean                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="ivy-clean" depends="" description="--> Prepare ivy clean">
            <delete dir="${lib.dir}"/>
            <mkdir dir="${lib.dir}"/>
            <copy todir="${lib.dir}">
                    <fileset dir="${base.dir}/${lib.dir}"/>
            </copy>            
        </target>
         
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ivy-prepare                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="ivy-prepare" depends="" description="--> Prepare ivy">
            <mkdir dir="${lib.dir}"/>
        </target>


	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ivy-init                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="ivy-init" depends="ivy-prepare" description="--> Initialization">
   
        </target>       
        

	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ivy-resolve                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="ivy-resolve" depends="ivy-prepare" description="--> Resolves Project Dependencies" >
        	<ivy:retrieve />
        </target>
	


	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ivy-clean-cache             
			 ${user.home} is the users home directory
			 Windows: C:\Documents and Settings\<username>\.ivy\cache
			 linux: /users/<username>/.ivy/cache
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="ivy-clean-cache" description="--> Cleans ivy cache">
            <delete dir="${user.home}/.ivy/cache"/>
        </target>



	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: compile                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="compile" depends="init" description=" Compiles the project sources">
            <javac srcdir="${src.path}" destdir="${classes.path}" debug="on" executable="${jdk15}" fork="true" classpathref="compile.classpath"/>
            
            <copy todir="${classes.path}">
                    <fileset dir="${src.path}">
                            <include name="hibernate.cfg.xml"/>
                            <include name="**/*.hbm.xml"/>
							<include name="*.properties"/>
                            <include name="**/*.properties"/>
                    </fileset>
            </copy>
        </target>
    
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ivy-compileonly                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="ivy-compileonly" depends="ivy-resolve, init" description="Compiles the project sources">
            <javac srcdir="${src.path}" destdir="${classes.path}" debug="on" executable="${jdk15}" fork="true" classpathref="compile.classpath"/>
            
            <copy todir="${classes.path}">
                    <fileset dir="${src.path}">
                            <include name="hibernate.cfg.xml"/>
                            <include name="**/*.hbm.xml"/>
                            <include name="*.properties"/>
							<include name="**/*.properties"/>
                    </fileset>
            </copy>
        </target>    
	


	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: war                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="war" depends="compile" description=" Packages the application as a distributable WAR">
            <mkdir dir="${dist.path}/${app.name}"/>
            
            <echo message="Building web root..."/>
            <copy todir="${dist.path}/${app.name}">
                    <fileset dir="${webroot.path}">
                            <exclude name="**/*.class"/>
                            <exclude name="**/*.jar"/>    
                            <exclude name="**/*.hbm.xml"/>
                    </fileset>    		
            </copy>
    
            <echo message="structuring classes to web root..."/>
            <mkdir dir="${dist.path}/${app.name}/WEB-INF/classes"/>
            <copy todir="${dist.path}/${app.name}/WEB-INF/classes">
                    <fileset dir="${classes.path}"/>
            </copy>
            
            <echo message="copying jars to web root..."/>
        	<mkdir dir="${dist.path}/${app.name}/WEB-INF/lib"/>
            <copy todir="${dist.path}/${app.name}/WEB-INF/lib">
                    <fileset dir="${user.home}">
                            <include name="**/*.jar"/>    			
                            <exclude name="servlet-api.jar"/>
                            <exclude name="junit.jar"/>    			
                    </fileset>
					<fileset dir="${base.dir}/${lib.dir}">
							<include name="*.jar"/>
	                        <exclude name="servlet-api.jar"/>
	                        <exclude name="junit.jar"/>  						
					</fileset>
            </copy>
            
            <echo message="building war...."/>    	
            <jar basedir="${dist.path}/${app.name}" destfile="${dist.path}/${app.name}.war" /> 
            <delete dir="${dist.path}/${app.name}"/> 
            <delete dir="${build.path}/${web.dir}"/>
        </target>
        
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: clean                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="clean" description="--> cleans the build dir">
        	<delete includeemptydirs="true">
        	  <fileset dir="${build.path}" includes="**/*" />
        	</delete>
        </target>
	

	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: tomcat-deploy                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="tomcat-deploy" depends="ivy-resolve,war" description="--> deploys to tomcat">
            <delete>    		
                    <fileset dir="${tomcat.webapp.dir}">    			
                            <include name="${app.name}.war"/>
                    </fileset>
            </delete>
            <delete includeemptydirs="true">
                    <fileset dir="${tomcat.webapp.dir}/${app.name}">
                    </fileset>
            </delete>
            <copy todir="${tomcat.webapp.dir}" file="${dist.path}/${app.name}.war"/>
        </target>
        
		<target name="tomcat-start" description="Start Tomcat application">
			<start url="${tomcat.manager.url}"
				username="${tomcat.username}"
				password="${tomcat.password}"
				path="/${app.name}"/>
		</target>

	    <target name="tomcat-stop" description="Stop Tomcat application">
	        <stop url="${tomcat.manager.url}"
	            username="${tomcat.username}"
	            password="${tomcat.password}"
	            path="/${app.name}"/>
	    </target>
        
		<target name="all-tomcat" depends="tomcat-stop,tomcat-deploy,tomcat-start" description="--> Stops Tomcat, reolves, deploys and starts servert">        
        
        </target>
		
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: all                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="all" depends="ivy-resolve,war" description="--> resolves dependency and packages project"/>        
        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: db.sync                     
							  
			 IF USING ORACLE XE
			comment out the "drop database myalumni;" & "create database myalumni;"				  
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->
        <target name="db.sync" description="--> does a database sync">
            <!-- drop the existing database -->
             <sql driver="${db.driver}" password="${db.password}" url="${db.url}" 
                    userid="${db.username}" classpathref="run.classpath" print="off"
                    autocommit="true" onerror="abort">
                    drop database ${db.dbname};
                    create database ${db.dbname};
            </sql>
           
            
            <!-- create tables for application -->
            <sql driver="${db.driver}" password="${db.password}" 
                    url="${db.url}" userid="${db.username}" classpathref="run.classpath"
                    print="off" autocommit="true"  onerror="abort"
                    src="${create.script}">        	
            </sql>
        	
                <!-- populate tables for application -->
                <sql driver="${db.driver}" password="${db.password}" 
                        url="${db.url}" userid="${db.username}" classpathref="run.classpath"
                        print="off" autocommit="true"  onerror="abort"
                        src="${load.script}">        	
                </sql>        	
                       
            <!-- populates test data 
            <sql driver="${db.driver}" password="${db.password}" 
                    url="${db.url}" userid="${db.username}" classpathref="run.classpath"
                    print="off" autocommit="true"  onerror="abort"
                    src="${testdata.script}">        	
            </sql>         	
        	-->
        	        	
        </target>

        
	<!-- - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - 
                              target: ear                     
         - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - -->       
	<target name="ear" depends="war">
		<mkdir dir="${build.path}/eardir"/>
		<copy file="application.xml" todir="${build.path}/eardir/META-INF"/>
		<copy file="${dist.path}/${app.name}.war" todir="${build.path}/eardir"/>
		<jar basedir="${build.path}/eardir" includes="**" destfile="${dist.path}/${app.name}.ear"/>
		<delete dir="${build.path}/eardir"/>
	</target>          
</project>