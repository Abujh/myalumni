<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
		
		 <!-- moved this from here to dispatcher-servlet and that took care of the
		 No mapping found for http request with uri ...... -->
	<!--<context:component-scan base-package="com.naijatek.contacts" />-->
	
	<context:annotation-config/>

	<context:property-placeholder location="classpath:config.properties"></context:property-placeholder>
 	
 	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>Messages</value>
		</property>
	</bean>

    <!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="500000"/>
        <property name=""
    </bean>
	
	<!--  If using JNDI
 	<jee:jndi-lookup id="dataSourceJNDI" jndi-name="java:comp/env/jdbc/datasource" resource-ref="true" />  -->
 
		<!--  If using JDBC -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<property name="driverClassName" value="${jdbc.driverClassName}"/>
	 	<property name="url" value="${jdbc.url}"/>
	 	<property name="username" value="${jdbc.username}"/>
	 	<property name="password" value="${jdbc.password}"/>
	</bean> 


	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource"/>
		 <property name="hibernateProperties">
			  <props>       
				  <prop key="hibernate.dialect">${hibernate.dialect}</prop>
				  <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			  </props>
		 </property>
	 	<property name="packagesToScan" value="net.naijatek.myalumni"/>
	</bean>


 <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    

	<tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en_US" />
        <!--Locale locale = RequestContextUtils.getLocale(request);-->
        <!--String country = locale.getCountry();-->
        <!--String language = locale.getLanguage();-->
    </bean>
<!--
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
-->

</beans>